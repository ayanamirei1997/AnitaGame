//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Nova_DialogueBoxColorWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Nova.DialogueBoxColor), typeof(System.Object));
		L.RegFunction("New", _CreateNova_DialogueBoxColor);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("color", get_color, set_color);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateNova_DialogueBoxColor(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				Nova.DialogueBoxController arg0 = (Nova.DialogueBoxController)ToLua.CheckObject<Nova.DialogueBoxController>(L, 1);
				Nova.DialogueBoxColor.Type arg1 = (Nova.DialogueBoxColor.Type)ToLua.CheckObject(L, 2, typeof(Nova.DialogueBoxColor.Type));
				Nova.DialogueBoxColor obj = new Nova.DialogueBoxColor(arg0, arg1);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Nova.DialogueBoxColor.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_color(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Nova.DialogueBoxColor obj = (Nova.DialogueBoxColor)o;
			UnityEngine.Color ret = obj.color;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index color on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_color(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Nova.DialogueBoxColor obj = (Nova.DialogueBoxColor)o;
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			obj.color = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index color on a nil value");
		}
	}
}

