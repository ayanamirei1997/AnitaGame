//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Nova_AssetLoaderWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Nova.AssetLoader), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("LoadTexture", LoadTexture);
		L.RegFunction("UnloadUnusedAssets", UnloadUnusedAssets);
		L.RegFunction("UnloadUnusedAndCachedAssets", UnloadUnusedAndCachedAssets);
		L.RegFunction("Preload", Preload);
		L.RegFunction("Unpreload", Unpreload);
		L.RegFunction("GetRestoreData", GetRestoreData);
		L.RegFunction("Restore", Restore);
		L.RegFunction("DebugPrint", DebugPrint);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("priority", get_priority, null);
		L.RegVar("restorableObjectName", get_restorableObjectName, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadTexture(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			UnityEngine.Texture o = Nova.AssetLoader.LoadTexture(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnloadUnusedAssets(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Nova.AssetLoader.UnloadUnusedAssets();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnloadUnusedAndCachedAssets(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Nova.AssetLoader.UnloadUnusedAndCachedAssets();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Preload(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Nova.AssetCacheType arg0 = (Nova.AssetCacheType)ToLua.CheckObject(L, 1, typeof(Nova.AssetCacheType));
			string arg1 = ToLua.CheckString(L, 2);
			Nova.AssetLoader.Preload(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Unpreload(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Nova.AssetCacheType arg0 = (Nova.AssetCacheType)ToLua.CheckObject(L, 1, typeof(Nova.AssetCacheType));
			string arg1 = ToLua.CheckString(L, 2);
			Nova.AssetLoader.Unpreload(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetRestoreData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Nova.AssetLoader obj = (Nova.AssetLoader)ToLua.CheckObject<Nova.AssetLoader>(L, 1);
			Nova.IRestoreData o = obj.GetRestoreData();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Restore(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Nova.AssetLoader obj = (Nova.AssetLoader)ToLua.CheckObject<Nova.AssetLoader>(L, 1);
			Nova.IRestoreData arg0 = (Nova.IRestoreData)ToLua.CheckObject<Nova.IRestoreData>(L, 2);
			obj.Restore(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DebugPrint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Nova.AssetLoader.DebugPrint();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_priority(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Nova.AssetLoader obj = (Nova.AssetLoader)o;
			Nova.RestorablePriority ret = obj.priority;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index priority on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_restorableObjectName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Nova.AssetLoader obj = (Nova.AssetLoader)o;
			string ret = obj.restorableObjectName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index restorableObjectName on a nil value");
		}
	}
}

