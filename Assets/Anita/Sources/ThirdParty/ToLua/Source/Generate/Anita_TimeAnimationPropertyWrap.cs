//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Anita_TimeAnimationPropertyWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Anita.TimeAnimationProperty), typeof(Anita.FloatBaseAnimationProperty));
		L.RegFunction("New", _CreateAnita_TimeAnimationProperty);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateAnita_TimeAnimationProperty(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				Anita.TimelineController arg0 = (Anita.TimelineController)ToLua.CheckObject<Anita.TimelineController>(L, 1);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
				Anita.TimeAnimationProperty obj = new Anita.TimeAnimationProperty(arg0, arg1);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<float>(L, 3))
			{
				Anita.TimelineController arg0 = (Anita.TimelineController)ToLua.CheckObject<Anita.TimelineController>(L, 1);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				Anita.TimeAnimationProperty obj = new Anita.TimeAnimationProperty(arg0, arg1, arg2);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<Anita.UseRelativeValue>(L, 3))
			{
				Anita.TimelineController arg0 = (Anita.TimelineController)ToLua.CheckObject<Anita.TimelineController>(L, 1);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
				Anita.UseRelativeValue arg2 = (Anita.UseRelativeValue)ToLua.ToObject(L, 3);
				Anita.TimeAnimationProperty obj = new Anita.TimeAnimationProperty(arg0, arg1, arg2);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Anita.TimeAnimationProperty.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

