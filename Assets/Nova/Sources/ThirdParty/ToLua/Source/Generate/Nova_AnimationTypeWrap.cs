//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Nova_AnimationTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(Nova.AnimationType));
		L.RegVar("None", get_None, null);
		L.RegVar("PerDialogue", get_PerDialogue, null);
		L.RegVar("Persistent", get_Persistent, null);
		L.RegVar("UI", get_UI, null);
		L.RegVar("Text", get_Text, null);
		L.RegVar("All", get_All, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<Nova.AnimationType>.Check = CheckType;
		StackTraits<Nova.AnimationType>.Push = Push;
	}

	static void Push(IntPtr L, Nova.AnimationType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(Nova.AnimationType), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_None(IntPtr L)
	{
		ToLua.Push(L, Nova.AnimationType.None);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PerDialogue(IntPtr L)
	{
		ToLua.Push(L, Nova.AnimationType.PerDialogue);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Persistent(IntPtr L)
	{
		ToLua.Push(L, Nova.AnimationType.Persistent);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UI(IntPtr L)
	{
		ToLua.Push(L, Nova.AnimationType.UI);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Text(IntPtr L)
	{
		ToLua.Push(L, Nova.AnimationType.Text);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_All(IntPtr L)
	{
		ToLua.Push(L, Nova.AnimationType.All);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		Nova.AnimationType o = (Nova.AnimationType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

