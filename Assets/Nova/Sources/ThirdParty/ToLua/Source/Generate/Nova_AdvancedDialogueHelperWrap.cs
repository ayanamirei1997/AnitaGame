//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Nova_AdvancedDialogueHelperWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Nova.AdvancedDialogueHelper), typeof(System.Object));
		L.RegFunction("Override", Override);
		L.RegFunction("GetOverride", GetOverride);
		L.RegFunction("Jump", Jump);
		L.RegFunction("GetJump", GetJump);
		L.RegFunction("New", _CreateNova_AdvancedDialogueHelper);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateNova_AdvancedDialogueHelper(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Nova.AdvancedDialogueHelper obj = new Nova.AdvancedDialogueHelper();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Nova.AdvancedDialogueHelper.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Override(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Nova.AdvancedDialogueHelper obj = (Nova.AdvancedDialogueHelper)ToLua.CheckObject<Nova.AdvancedDialogueHelper>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.Override(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetOverride(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Nova.AdvancedDialogueHelper obj = (Nova.AdvancedDialogueHelper)ToLua.CheckObject<Nova.AdvancedDialogueHelper>(L, 1);
			string o = obj.GetOverride();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Jump(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Nova.AdvancedDialogueHelper obj = (Nova.AdvancedDialogueHelper)ToLua.CheckObject<Nova.AdvancedDialogueHelper>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.Jump(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetJump(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Nova.AdvancedDialogueHelper obj = (Nova.AdvancedDialogueHelper)ToLua.CheckObject<Nova.AdvancedDialogueHelper>(L, 1);
			string o = obj.GetJump();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

